data:
  dry_run: true # Train & val on 16 images
  image_width: 960
  image_height: 960

  # NOTE: To apply slicing:
  # 1. Set `apply_slicing` to true and set `slice_width` and `slice_height` to the desired values.
  # 2. Uncomment RandomCrop in the train transform section.
  apply_slicing: true
  slice_width: 512
  slice_height: 512

  train:
    path: data/uavid_train

    batch_size: 4
    num_workers: 0 # Must be 0 for Windows or WSL https://github.com/pytorch/pytorch/issues/12831
    pin_memory: true
    shuffle: true
    drop_last: true

    transform:
      __class_fullname__: Compose
      transforms:
        - __class_fullname__: Resize
          height: "{{data.image_height}}"
          width: "{{data.image_width}}"
          interpolation: 2 # bicubic; see https://docs.opencv.org/3.4/da/d54/group__imgproc__transform.html

        - __class_fullname__: RandomCrop
          height: "{{data.slice_height}}"
          width: "{{data.slice_width}}"
          pad_position: random

        - __class_fullname__: Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]

        - __class_fullname__: ToTensorV2

      additional_targets:
        mask: mask

  val:
    path: data/uavid_val

    batch_size: 4
    num_workers: 0 # Must be 0 for Windows or WSL https://github.com/pytorch/pytorch/issues/12831
    pin_memory: true
    shuffle: false
    drop_last: false

    transform:
      __class_fullname__: Compose
      transforms:
        - __class_fullname__: Resize
          height: "{{data.image_height}}"
          width: "{{data.image_width}}"
          interpolation: 2 # bicubic; see https://docs.opencv.org/3.4/da/d54/group__imgproc__transform.html

        - __class_fullname__: Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]

        - __class_fullname__: ToTensorV2

      additional_targets:
        mask: mask
  
  test:
    path: data/uavid_test

    batch_size: 4
    num_workers: 0 # Must be 0 for Windows or WSL https://github.com/pytorch/pytorch/issues/12831
    pin_memory: true
    shuffle: false
    drop_last: false

    transform:
      __class_fullname__: Compose
      transforms:
        - __class_fullname__: Resize
          height: "{{data.image_height}}"
          width: "{{data.image_width}}"
          interpolation: 2 # bicubic; see https://docs.opencv.org/3.4/da/d54/group__imgproc__transform.html

        - __class_fullname__: Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]

        - __class_fullname__: ToTensorV2

      additional_targets:
        mask: mask

trainer:
  common:
    seed: 42
    epochs: 10
    accelerator: gpu
    devices:
      - 0
    precision: 16-mixed
    log_every_n_steps: 10
    export_onnx: true
    export_onnx_fp16: true

  model:
    arch: unet
    encoder_name: mit_b0
    encoder_weights: imagenet
    in_channels: 3
    classes: 8

  loss:
    loss_name: dice
    loss_params:
      mode: multiclass
      from_logits: true
      smooth: 0
  
  metrics:
    metric_params:
      task: multiclass
      num_classes: 8
      ignore_index: null

  optimizer:
    optimizer_name: adamw
    optimizer_params:
      lr: 0.0001
      weight_decay: 0.01

  scheduler:
    use_scheduler: true
    scheduler_name: cosineannealinglr
    scheduler_params:
      eta_min: 0.00001

  callbacks:
    model_checkpoint: # This callback is mandatory
      filename: 'best_model'
      monitor: val_iou
      mode: max
      save_top_k: 1
      verbose: true

    optional_callbacks:    
    # - callback_name: EarlyStopping
    #   callback_params:
    #     monitor: val_iou
    #     mode: max
    #     patience: 10
    #     verbose: true

    - callback_name: LearningRateMonitor
      callback_params:
        logging_interval: epoch

  loggers:
    - logger_name: comet
      logger_params:
        project: uavid
        workspace: uavid
        online: true
    - logger_name: tensorboard
      logger_params: {}
        
